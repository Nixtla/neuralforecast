{
  "$schema": "https://mintlify.com/schema.json",
  "name": "Nixtla",
  "logo": {
    "light": "/light.png",
    "dark": "/dark.png"
  },
  "favicon": "/favicon.svg",
  "colors": {
    "primary": "#0E0E0E",
    "light": "#FAFAFA",
    "dark": "#0E0E0E",
    "anchors": {
      "from": "#2AD0CA",
      "to": "#0E00F8"
    }
  },
  "topbarCtaButton": {
    "type": "github",
    "url": "https://github.com/Nixtla/neuralforecast"
  },
  "topAnchor": {
    "name": "NeuralForecast",
    "icon": "brain-circuit"
  },
  "navigation": [
    {
      "group": "Getting Started",
      "pages": [
        "docs/getting-started/introduction.html",
        "docs/getting-started/quickstart.html",
        "docs/getting-started/installation.html",
        "docs/getting-started/datarequirements.html"
      ]
    },
    {
      "group": "Capabilities",
      "pages": [
        "docs/capabilities/overview.html",
        "docs/capabilities/objectives.html",
        "docs/capabilities/exogenous_variables.html",
        "docs/capabilities/hyperparameter_tuning.html",
        "docs/capabilities/predictinsample.html",
        "docs/capabilities/save_load_models.html",
        "docs/capabilities/time_series_scaling.html"
      ]
    },
    {
      "group": "Tutorials",
      "pages": [
        {
          "group":"Forecasting",
          "pages":[
            "docs/tutorials/getting_started_complete.html",
            "docs/tutorials/cross_validation_tutorial.html",
            "docs/tutorials/longhorizon_nhits.html",
            "docs/tutorials/longhorizon_transformers.html",
            "docs/tutorials/forecasting_tft.html",
            "docs/tutorials/multivariate_tsmixer.html"   
          ]
        },        
        {
          "group":"Probabilistic Forecasting",
          "pages":[
            "docs/tutorials/uncertainty_quantification.html",
            "docs/tutorials/longhorizon_probabilistic.html"
          ]
        },   
        {
          "group":"Special Topics",
          "pages":[
            "docs/tutorials/hierarchical_forecasting.html",
            "docs/tutorials/distributed_neuralforecast.html",
            "docs/tutorials/intermittent_data.html",
            "docs/tutorials/using_mlflow.html",
            "docs/tutorials/robust_forecasting.html",
            "docs/tutorials/interpretable_decompositions.html",
            "docs/tutorials/comparing_methods.html",
            "docs/tutorials/temporal_classification.html",
            "docs/tutorials/transfer_learning.html",
            "docs/tutorials/adding_models.html",
            "docs/tutorials/large_datasets.html"    
          ]
        }               
      ]
    },
    {
      "group": "Use cases",
      "pages": [
        "docs/use-cases/electricity_peak_forecasting.html",
        "docs/use-cases/predictive_maintenance.html"
      ]
    },    
    {
      "group": "API Reference",
      "pages": [
        "docs/tutorials/neuralforecasting_map.html",
        "core.html",
        {
          "group": "Models",
          "pages": [
            "models.autoformer.html",
            "models.bitcn.html",
            "models.deepar.html",
            "models.deepnpts.html",
            "models.dilated_rnn.html",
            "models.dlinear.html",
            "models.fedformer.html",
            "models.gru.html",
            "models.hint.html",
            "models.informer.html",
            "models.itransformer.html",
            "models.kan.html",
            "models.lstm.html",
            "models.mlp.html",
            "models.mlpmultivariate.html",
            "models.nbeats.html",
            "models.nbeatsx.html",
            "models.nhits.html",
            "models.nlinear.html",
            "models.patchtst.html",
            "models.rnn.html",
            "models.softs.html",
            "models.stemgnn.html",
            "models.tcn.html",
            "models.tft.html",
            "models.tide.html",
            "models.timellm.html",
            "models.timemixer.html",
            "models.timesnet.html",
            "models.tsmixer.html",
            "models.tsmixerx.html",
            "models.vanillatransformer.html"
            ]
        },
        "models.html",
        {
          "group": "Train/Evaluation",
          "pages": [
            "losses.pytorch.html", 
            "losses.numpy.html"
          ]
        },
        {
          "group": "Common Components",
          "pages": [
            "common.base_auto.html",
            "common.base_recurrent.html",
            "common.base_windows.html",
            "common.scalers.html",
            "common.modules.html"
          ]
        },
        {
          "group": "Utils",
          "pages": [
            "tsdataset.html", 
            "utils.html"
          ]
        }
      ]
    }
  ]
}
